"""
Задача:
Реализуйте класс MoneyBox, для работы с виртуальной копилкой. Каждая копилка имеет
ограниченную вместимость, которая выражается целым числом – количеством монет,
которые можно положить в копилку.

Класс должен поддерживать информацию о количестве монет в копилке, предоставлять
возможность добавлять монеты в копилку и узнавать, можно ли добавить в копилку ещё
какое-то количество монет, не превышая ее вместимость.

Класс должен иметь следующий вид:
class MoneyBox:
    def __init__(self, capacity): # конструктор с аргументом – вместимость копилки

    def can_add(self, v):         # True, если можно добавить v монет, False иначе

    def add(self, v):             # положить v монет в копилку

При создании копилки, число монет в ней равно 0.
Примечание: Гарантируется, что метод add(self, v) будет вызываться только если
can_add(self, v) – True.
"""

class MoneyBox():
    def __init__(self, capacity): # конструктор с аргументом – вместимость копилки

        self.capacity = capacity

    def can_add(self, v):  # True, если можно добавить v монет, False иначе
        if v <= self.capacity:
            return True

        else:
            return False

    def add(self, v):  # Метод складывания v монет в копилку

        self.capacity -= v
        return self.capacity


# Проверка
x = MoneyBox(100)

print(x.add(40))
print(x.add(5))
print(x.add(9))
print(x.add(3))
print(x.can_add(50))
print(x.capacity)